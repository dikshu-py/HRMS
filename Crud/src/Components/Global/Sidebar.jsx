import React from 'react'
import { useNavigate } from 'react-router-dom'

const Sidebar = () => {
  const navigate = useNavigate()

  const content = {
    "Recruitment": ["Candidates"],
    "Organization": ["Employees", "Attendence", "Leaves"],
    "Others": ["Logout"],
  }
  const icons = {
    "Candidates": <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M2.5 9.16659H6.66667M4.58333 11.2499V7.08325M12.0833 11.6666C15.0903 11.6666 16.6951 12.6733 17.2609 14.6867C17.5598 15.75 16.6046 16.6666 15.5 16.6666H8.66666C7.56209 16.6666 6.60687 15.75 6.90573 14.6867C7.47159 12.6733 9.07637 11.6666 12.0833 11.6666ZM12.0833 8.33325C13.4722 8.33325 14.1667 7.61897 14.1667 5.83325C14.1667 4.04754 13.4722 3.33325 12.0833 3.33325C10.6944 3.33325 10 4.04754 10 5.83325C10 7.61897 10.6944 8.33325 12.0833 8.33325Z" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
    ,
    "Employees": <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M15.4209 15.8334H16.6667C17.5871 15.8334 18.3891 15.0634 18.0967 14.1906C17.651 12.8605 16.5546 12.0561 14.6273 11.7775M12.0834 9.05382C12.3259 9.13047 12.6037 9.16675 12.9167 9.16675C14.3056 9.16675 15 8.45246 15 6.66675C15 4.88103 14.3056 4.16675 12.9167 4.16675C12.6037 4.16675 12.3259 4.20303 12.0834 4.27968M7.91667 11.6667C10.7363 11.6667 12.323 12.4044 12.9763 13.8796C13.4236 14.8896 12.4379 15.8334 11.3333 15.8334H4.5C3.39543 15.8334 2.40976 14.8896 2.85702 13.8796C3.51034 12.4044 5.09706 11.6667 7.91667 11.6667ZM7.91667 9.16675C9.30556 9.16675 10 8.45246 10 6.66675C10 4.88103 9.30556 4.16675 7.91667 4.16675C6.52778 4.16675 5.83333 4.88103 5.83333 6.66675C5.83333 8.45246 6.52778 9.16675 7.91667 9.16675Z" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
    ,
    "Attendence": <svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M6.33301 5.33333C6.33301 4.78105 6.78072 4.33333 7.33301 4.33333H8.66634C9.21863 4.33333 9.66634 4.78105 9.66634 5.33333V11.6667C9.66634 12.219 9.21863 12.6667 8.66634 12.6667H7.33301C6.78072 12.6667 6.33301 12.219 6.33301 11.6667V5.33333Z" stroke="#4D007D" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M1.33301 8.66667C1.33301 8.11438 1.78072 7.66667 2.33301 7.66667H3.66634C4.21863 7.66667 4.66634 8.11438 4.66634 8.66667V11.6667C4.66634 12.219 4.21863 12.6667 3.66634 12.6667H2.33301C1.78072 12.6667 1.33301 12.219 1.33301 11.6667V8.66667Z" stroke="#4D007D" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M11.333 2C11.333 1.44772 11.7807 1 12.333 1H13.6663C14.2186 1 14.6663 1.44772 14.6663 2V11.6667C14.6663 12.219 14.2186 12.6667 13.6663 12.6667H12.333C11.7807 12.6667 11.333 12.219 11.333 11.6667V2Z" stroke="#4D007D" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
    ,
    "Leaves": <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M8.33301 3.33325C8.33301 6.09468 6.09443 8.33325 3.33301 8.33325C6.09443 8.33325 8.33301 10.5718 8.33301 13.3333C8.33301 10.5718 10.5716 8.33325 13.333 8.33325C10.5716 8.33325 8.33301 6.09468 8.33301 3.33325Z" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
      <path d="M14.583 12.4999C14.583 13.6505 13.6503 14.5833 12.4997 14.5833C13.6503 14.5833 14.583 15.516 14.583 16.6666C14.583 15.516 15.5157 14.5833 16.6663 14.5833C15.5157 14.5833 14.583 13.6505 14.583 12.4999Z" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </svg>
    , "Logout": <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M11.6663 16.6667H5.33301C4.22844 16.6667 3.33301 15.7713 3.33301 14.6667L3.33301 5.33341C3.33301 4.22884 4.22844 3.33342 5.33301 3.33342H11.6663M8.33301 10.0001H17.4997M17.4997 10.0001L14.9997 12.5001M17.4997 10.0001L14.9997 7.50008" stroke="#121212" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
    </svg>



  }


  const handleClick = (item) => {
    if (item == "Logout") {
      localStorage.removeItem('token')
      navigate("/login")
    }
    else if (item == "Candidates") {
      navigate('/')

    } else {
      navigate(`/${item.toLowerCase()}`)
    }
  }
  return (
    <div className="w-[280px]  text-white p-4 space-y-4 border-r-[1px] border-[#D6D6D6] ">
      <div className="logo">
        <div className='flex items-center gap-4'>
           <svg width="22" height="22" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect x="2" y="2" width="28" height="28" rx="2" fill="white" stroke="#4D007D" stroke-width="4"/>
</svg>
      <svg width="56" height="15" viewBox="0 0 56 15" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2 14.5C1.49333 14.5 1.1 14.36 0.82 14.08C0.553333 13.8 0.42 13.4133 0.42 12.92V1.94C0.42 1.42 0.553333 1.02667 0.82 0.759999C1.08667 0.493333 1.47333 0.36 1.98 0.36C2.47333 0.36 2.85333 0.493333 3.12 0.759999C3.38667 1.02667 3.52 1.42 3.52 1.94V11.88H8.88C9.30667 11.88 9.63333 11.9933 9.86 12.22C10.1 12.4467 10.22 12.7667 10.22 13.18C10.22 13.6067 10.1 13.9333 9.86 14.16C9.63333 14.3867 9.30667 14.5 8.88 14.5H2ZM17.6436 14.72C16.2569 14.72 15.0369 14.42 13.9836 13.82C12.9436 13.2067 12.1303 12.3533 11.5436 11.26C10.9703 10.1667 10.6836 8.89333 10.6836 7.44C10.6836 6.33333 10.8436 5.34 11.1636 4.46C11.4969 3.56667 11.9703 2.80667 12.5836 2.18C13.1969 1.54 13.9303 1.04667 14.7836 0.699999C15.6503 0.353333 16.6036 0.18 17.6436 0.18C19.0569 0.18 20.2836 0.48 21.3236 1.08C22.3636 1.68 23.1703 2.52667 23.7436 3.62C24.3303 4.7 24.6236 5.96667 24.6236 7.42C24.6236 8.52667 24.4569 9.52667 24.1236 10.42C23.7903 11.3133 23.3169 12.08 22.7036 12.72C22.0903 13.36 21.3569 13.8533 20.5036 14.2C19.6503 14.5467 18.6969 14.72 17.6436 14.72ZM17.6436 12.08C18.4303 12.08 19.0969 11.9 19.6436 11.54C20.2036 11.1667 20.6303 10.6333 20.9236 9.94C21.2303 9.23333 21.3836 8.4 21.3836 7.44C21.3836 5.97333 21.0569 4.84 20.4036 4.04C19.7503 3.22667 18.8303 2.82 17.6436 2.82C16.8703 2.82 16.2036 3 15.6436 3.36C15.0836 3.72 14.6569 4.24667 14.3636 4.94C14.0703 5.63333 13.9236 6.46667 13.9236 7.44C13.9236 8.89333 14.2503 10.0333 14.9036 10.86C15.5569 11.6733 16.4703 12.08 17.6436 12.08ZM34.0016 14.72C32.4149 14.72 31.0682 14.42 29.9616 13.82C28.8682 13.22 28.0349 12.38 27.4616 11.3C26.8882 10.22 26.6016 8.95333 26.6016 7.5C26.6016 6.38 26.7682 5.37333 27.1016 4.48C27.4482 3.57333 27.9416 2.80667 28.5816 2.18C29.2349 1.54 30.0216 1.04667 30.9416 0.699999C31.8749 0.353333 32.9282 0.18 34.1016 0.18C34.8216 0.18 35.5416 0.259999 36.2616 0.419999C36.9816 0.579999 37.6749 0.846666 38.3416 1.22C38.6216 1.38 38.8082 1.58667 38.9016 1.84C39.0082 2.08 39.0349 2.34 38.9816 2.62C38.9416 2.88667 38.8349 3.12667 38.6616 3.34C38.5016 3.54 38.2882 3.67333 38.0216 3.74C37.7682 3.79333 37.4749 3.74 37.1416 3.58C36.7016 3.34 36.2349 3.16667 35.7416 3.06C35.2482 2.94 34.7082 2.88 34.1216 2.88C33.1749 2.88 32.3816 3.06 31.7416 3.42C31.1016 3.76667 30.6216 4.28667 30.3016 4.98C29.9949 5.66 29.8416 6.5 29.8416 7.5C29.8416 9.00667 30.2016 10.1467 30.9216 10.92C31.6549 11.6933 32.7349 12.08 34.1616 12.08C34.6416 12.08 35.1349 12.0333 35.6416 11.94C36.1482 11.8467 36.6482 11.7133 37.1416 11.54L36.5616 12.8V8.96H34.7616C34.3616 8.96 34.0549 8.86 33.8416 8.66C33.6282 8.46 33.5216 8.18667 33.5216 7.84C33.5216 7.48 33.6282 7.20667 33.8416 7.02C34.0549 6.82 34.3616 6.72 34.7616 6.72H37.9016C38.3016 6.72 38.6016 6.82667 38.8016 7.04C39.0149 7.25333 39.1216 7.56 39.1216 7.96V12.6C39.1216 12.9467 39.0549 13.24 38.9216 13.48C38.7882 13.72 38.5616 13.8933 38.2416 14C37.6416 14.2133 36.9682 14.3867 36.2216 14.52C35.4749 14.6533 34.7349 14.72 34.0016 14.72ZM48.4053 14.72C47.0186 14.72 45.7986 14.42 44.7453 13.82C43.7053 13.2067 42.892 12.3533 42.3053 11.26C41.732 10.1667 41.4453 8.89333 41.4453 7.44C41.4453 6.33333 41.6053 5.34 41.9253 4.46C42.2586 3.56667 42.732 2.80667 43.3453 2.18C43.9586 1.54 44.692 1.04667 45.5453 0.699999C46.412 0.353333 47.3653 0.18 48.4053 0.18C49.8186 0.18 51.0453 0.48 52.0853 1.08C53.1253 1.68 53.932 2.52667 54.5053 3.62C55.092 4.7 55.3853 5.96667 55.3853 7.42C55.3853 8.52667 55.2186 9.52667 54.8853 10.42C54.552 11.3133 54.0786 12.08 53.4653 12.72C52.852 13.36 52.1186 13.8533 51.2653 14.2C50.412 14.5467 49.4586 14.72 48.4053 14.72ZM48.4053 12.08C49.192 12.08 49.8586 11.9 50.4053 11.54C50.9653 11.1667 51.392 10.6333 51.6853 9.94C51.992 9.23333 52.1453 8.4 52.1453 7.44C52.1453 5.97333 51.8186 4.84 51.1653 4.04C50.512 3.22667 49.592 2.82 48.4053 2.82C47.632 2.82 46.9653 3 46.4053 3.36C45.8453 3.72 45.4186 4.24667 45.1253 4.94C44.832 5.63333 44.6853 6.46667 44.6853 7.44C44.6853 8.89333 45.012 10.0333 45.6653 10.86C46.3186 11.6733 47.232 12.08 48.4053 12.08Z" fill="#4D007D"/>
</svg>


        </div>
       
      {/* <label htmlFor="search" clas>Search</label> */}
      <input  id='search' type='text' placeholder='Search' className="border placeholder:text-gray-500 mt-[40px] mb-[16px] text-black rounded-3xl py-2 px-8" />

      </div>
      {Object.entries(content).map(([section, items], index) => (
        <div key={index} className=''>
          <h2 className="font-bold text-sm text-[#A4A4A4] uppercase mb-2">{section}</h2>
          <ul className="space-y-1 mt-[16px] gap-[16px]">
            {items.map((item, i) => (
              <li key={i} onClick={() => handleClick(item)} className="px-5 py-2 font-semibold    rounded cursor-pointer text-[#4D007D]">
                <div className="flex items-center gap-4">
                  {icons[item]}
                  <p>{item}</p>
                </div>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  )
}

export default Sidebar